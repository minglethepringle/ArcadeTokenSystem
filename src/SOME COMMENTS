I haven't touched Angular in a while, so coming back to it was a bit of a challenge.
In React, there's only components, and components within components.
In Angular, there's modules, and inside those modules, there are components.
I'm not confident I structured my program in the "correct Angular" way. I have each page as a component, but I'm not sure if I should have each page as a module, and then have each page's components as components within that module.
With some guidance and advice, I can definitely pick up and learn what the common practice for Angular organization is.

I recently learned a lot in my Object-Oriented Development class about the MVC architecture. Through re-learning Angular, I learned that components act as the "view" part of the MVC architecture, thus I shouldn't have any data being held in the view, and rather have the data be held in the controller, and then passed to the view. I learned that the controller in this instance are services. Thus, I just have the LedgerService hold the ledger data, have ArcadeService inject LedgerService, and allow ArcadeService to be injected everywhere, thus "passing down" the accessibility to the ledger indirectly by offering helpful arcade-related methods like getTokens and addTokens that utilize the ledger as the source of truth. I'm not sure if maybe having the ledger accessible via global state would've been a better option (instead of having ledger -> LedgerService -> ArcadeService), but as I've learned in OOD, keeping data as private as possible to prevent mutation and bugs seems to be the way to go.